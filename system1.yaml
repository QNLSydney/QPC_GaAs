instruments:
  # intrument name = identifier
  # this is what is looked up by the add_instrument method of StationConfig

  mdac:
    driver: qcodes.instrument_drivers.qnl.MDAC
    type: MDAC
    address: ASRL5::INSTR
    # if true any existing connection will be closed when instatiated
    # default (if left out) is false
    auto_reconnect: true
    # disable logging, since it seems to be generating quite a lot of data
    init: 
      logging: false

    parameters:
      # Set up default parameters
        
      # Can use first one as sort of template or basis settings
      # and use them for other channels
      # chXX.ramp: # &base
      #   # new way of calling it in python: instrument.alias
      #   alias: myalias
      #   # label appearing on plots or monitor
      #   label: mylabel
      #   # software limits of values we want it to set
      #   limits: -2.5,0.25
      #   # rate: 0.005
      #   monitor: true

      # LEFT DOUBLE DOT, DOT 1
      ch09.voltage:
        alias: LW1_1
        label: LW1_1
        limits: -2.5,0.25
        monitor: true
      
      temperature:
        label: MDAC temperature
        monitor: true

  sr860:
    # class of the instrument
    driver: qcodes.instrument_drivers.stanford_research.SR860
    type: SR860
    # visa address
    address: TCPIP0::10.66.42.251::inst0::INSTR
    # all following fields are optional:
    # init:
      # Use this to simulate an instrument if you don't have 
      # a physical copy at hand
      # visalib: 'lockin.yaml@sim'
    add_parameters:
      X_current:
        source: X
        label: In-Phase Current
        unit: A
        scale: 1000000
      Y_current:
        source: Y
        label: Quadrature Current
        unit: A
        scale: 1000000
      R_current:
        source: R
        label: Magnitude
        unit: A
        scale: 1000000
    parameters:
      time_constant:
        label: lockin tc
        monitor: True
      sensitivity:
        label: lockin sensitivity
        monitor: True
      amplitude:
        label: excitation
        scale: 10000
        monitor: True
      sine_outdc:
        label: DC offset
        scale: 10000
        monitor: True
    auto_reconnect: true
  ithaco:
    driver: qcodes.instrument_drivers.ithaco.Ithaco_1211
    type: Ithaco_1211
    parameters:
      sens:
        initial_value: 0.000001
      invert:
        initial_value: False
      sens_factor:
        initial_value: 1
      suppression:
        initial_value: 0.0000000001
      risetime:
        initial_value: 0.1

    # # new parameters, that get created and attached to the instrument
    # new_parameter:
    # # ex: DC current
    # DC:
    #   # source specifies which getter and setter should be used
    #   source: # e.g channel
    #   # label and unit change these attributes of the parameter
    #   label:
    #   unit: #
    #   limits:
    #   monitor: true
#
#
# Alternative way of specifying parameters:
# parameters:
#   ch01.v: {alias: gate1, label: cutter right}

